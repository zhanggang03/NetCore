{
  "ReRoutes": [
    {
      "DownstreamPathTemplate": "/api/values",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 44324
        }
      ],
      "UpstreamPathTemplate": "/webapia/values",
      "UpstreamHttpMethod": [ "Get" ],
      "RateLimitOptions": { //添加限流
        "ClientWhiteList": [ "myclient" ], //白名单，不在限流的范围内
        "EnableRateLimiting": true, //是否限流，如果true，配置生效
        "Period": "1m", //限流时间段，1s(1秒),1m(1分)，1h(1小时)类似值
        "PeriodTimespan": 30, //超过限流限制的次数后，需要等待重置的时间（单位是秒）
        "Limit": 2 //在Period时间内最大能访问的数量
      }
    },
    {
      "DownstreamPathTemplate": "/api/values",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 44341
        }
      ],
      "UpstreamPathTemplate": "/webapib/values",
      "UpstreamHttpMethod": [ "Get" ]
    },

    {
      "DownstreamPathTemplate": "/api/values/{id}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 44324
        }
      ],
      "UpstreamPathTemplate": "/WebApiA/values/{id}",
      "UpstreamHttpMethod": [ "Get" ]
      //"ReRouteIsCaseSensitive": true
    },
    {
      "DownstreamPathTemplate": "/api/values/{id}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 44341
        }
      ],
      "UpstreamPathTemplate": "/WebApib/values/{id}",
      "UpstreamHttpMethod": [ "Get" ]
    },



    {
      "DownstreamPathTemplate": "/api/User/GetSex",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 44324
        }
      ],
      "UpstreamPathTemplate": "/Sex",
      "UpstreamHttpMethod": [ "Get" ],
      "Key": "Sex"
    },
    {
      "DownstreamPathTemplate": "/api/User/GetAge",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 44324
        }
      ],
      "UpstreamPathTemplate": "/Age",
      "UpstreamHttpMethod": [ "Get" ], //目前聚合请求只支持Get方法
      "Key": "Age"
    },
    {
      "DownstreamPathTemplate": "/api/User/GetID",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 44324
        }
      ],
      "UpstreamPathTemplate": "/ID",
      "UpstreamHttpMethod": [ "Get" ],
      "Key": "ID"
    },


    {
      "DownstreamPathTemplate": "/api/Counter/Count",
      "DownstreamScheme": "https",
      "UpstreamPathTemplate": "/count",
      "UpstreamHttpMethod": [ "Get" ],
      "ServiceName": "Count", //指定服务发现的服务名称，在Consul中注册服务中用到
      "LoadBalancer": "RoundRobin", //负载均衡模式 RoundRobin 时间片轮询  LeastConnection 最少连接   
      "UseServiceDiscovery": true //标志是否使用服务发现
    },

    {
      "DownstreamPathTemplate": "/api/Time/GetNow",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 44324
        }
      ],
      "UpstreamPathTemplate": "/Now",
      "UpstreamHttpMethod": [ "Get" ],
      "FileCacheOptions": { //缓存设置
        "TtlSeconds": 60, //缓存时间（秒）
        "Region": "somename" //缓存区，表示该配置缓存放在哪个区，可以再配置管理中进行维护，人工清除缓存需要与Token相关联
      }
    },


    {
      "DownstreamPathTemplate": "/api/Slow/GetName",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 44324
        }
      ],
      "UpstreamPathTemplate": "/GetName",
      "UpstreamHttpMethod": [ "Get" ],
      "QoSOptions": { //熔断设置
        "ExceptionsAllowedBeforeBreaking": 3, //发生几次请求异常（比如超时）后进行熔断，该值必须大于0
        "DurationOfBreak": 60000, //熔断时间（毫秒）
        "TimeoutValue": 3000 //下游请求超时时间（毫秒，默认90秒）
      }
    },

    // --> Identity Service Part
    {
      "UseServiceDiscovery": false, // do not use Consul service discovery in DEV env
      "DownstreamPathTemplate": "/api/{url}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 44379
        }
      ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "UpstreamPathTemplate": "/api/identityservice/{url}",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "RateLimitOptions": {
        "ClientWhitelist": [ "admin" ], // 白名单
        "EnableRateLimiting": true, // 是否启用限流
        "Period": "1m", // 统计时间段：1s, 5m, 1h, 1d
        "PeriodTimespan": 15, // 多少秒之后客户端可以重试
        "Limit": 10 // 在统计时间段内允许的最大请求数量
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2, // 允许多少个异常请求
        "DurationOfBreak": 5000, // 熔断的时间，单位为秒
        "TimeoutValue": 3000 // 如果下游请求的处理时间超过多少则视如该请求超时
      },
      "HttpHandlerOptions": {
        "UseTracing": false // use butterfly to tracing request chain
      },
      "ReRoutesCaseSensitive": false // non case sensitive
    }
  ],


  "Aggregates": [
    {
      "ReRouteKeys": [
        "Sex",
        "Age",
        "ID"
      ],
      "UpstreamPathTemplate": "/GetUserInfo"
    }
  ],

  //指定服务发现器位置，Ocelot只支持一个Provider(有待商榷)
  "GlobalConfiguration": {
    "ServiceDiscoveryProvider": {
      "Host": "localhost",
      "Port": 8500
    },

    //关于限流的配置来控制是否在Response Header中返回限流相关的信息
    //以及限流的返回信息、装填码，还有ClientHeader;
    "RateLimitOptions": {
      "DisableRateLimitHeaders": true,
      "QuotaExceededMessage": "Stop request plz!",
      "HttpStatusCode": 999,
      "ClientIdHeader": "cid"   //再全局配置中，将Header的key有Client改为cid
    }
  }
}